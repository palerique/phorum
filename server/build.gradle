buildscript {
  ext {
    springBootVersion = '2.0.0.M7'
  }
  repositories {
    mavenCentral()
    maven { url "https://repo.spring.io/snapshot" }
    maven { url "https://repo.spring.io/milestone" }
    jcenter()
  }
  dependencies {
    classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    classpath("org.unbroken-dome.gradle-plugins:gradle-testsets-plugin:1.4.2")
    classpath("net.saliman:gradle-cobertura-plugin:2.5.3")
    classpath("com.github.ksoichiro:gradle-console-reporter:0.5.0")
  }
}

apply plugin: 'java'
apply plugin: "idea"
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

apply plugin: 'checkstyle'
apply plugin: 'findbugs'
apply plugin: 'pmd'

apply plugin: 'com.github.ksoichiro.console.reporter'

apply plugin: 'org.unbroken-dome.test-sets'

apply plugin: 'net.saliman.cobertura'

group = 'br.com.ph'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
  mavenCentral()
  maven { url "https://repo.spring.io/snapshot" }
  maven { url "https://repo.spring.io/milestone" }
}

testSets {
  integrationTest
}

dependencies {
  compile('org.springframework.boot:spring-boot-starter-actuator')
  compile('org.springframework.boot:spring-boot-starter-data-jpa')
  compile("org.springframework.boot:spring-boot-starter-web")
  compile('org.springframework.boot:spring-boot-starter-security')

  compile('org.apache.commons:commons-lang3')

  compile("io.jsonwebtoken:jjwt:0.9.0")
  compile("org.zalando:problem-spring-web:0.22.0")

  compile("com.fasterxml.jackson.datatype:jackson-datatype-json-org")
  compile("com.fasterxml.jackson.datatype:jackson-datatype-hppc")
  compile("com.fasterxml.jackson.datatype:jackson-datatype-jsr310")
  compile("com.fasterxml.jackson.datatype:jackson-datatype-hibernate5")
  compile("com.fasterxml.jackson.core:jackson-annotations")
  compile("com.fasterxml.jackson.core:jackson-databind")
  compile("com.fasterxml.jackson.module:jackson-module-afterburner")

  runtime('org.springframework.boot:spring-boot-devtools')
  runtime('com.h2database:h2')

  compileOnly('org.projectlombok:lombok')

  testCompile('org.springframework.boot:spring-boot-starter-test')
  testCompile('org.springframework.security:spring-security-test')

  testCompileOnly('org.projectlombok:lombok')

  integrationTestCompileOnly('org.projectlombok:lombok')
}

checkstyle {
  toolVersion "8.5"
  ignoreFailures = false
  configFile = rootProject.file('quality-enforcement/checkstyle/checkstyle.xml')
}

findbugs {
  ignoreFailures = false
}

tasks.withType(FindBugs) {
  reports {
    xml.enabled = false
    html.enabled = true
  }
}

pmd {
  ruleSetFiles = rootProject.files('quality-enforcement/pmd/ruleset.xml')
  ignoreFailures = false
  rulePriority = 3
}

